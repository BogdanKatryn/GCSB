const TelegramBot = require('node-telegram-bot-api'); 
const dotenv = require('dotenv'); 
const { getGameList } = require('./database.js'); 

dotenv.config(); 
const token = process.env.TOKEN; 
const bot = new TelegramBot(token, { polling: true }); 

const start = () => {
    bot.setMyCommands([
        { command: '/start', description: "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ" },
        { command: '/info', description: "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ" },
        { command: '/list', description: "–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∏–≥—Ä" },
        { command: '/random', description: "–í—ã–±—Ä–∞—Ç—å —Å–ª—É—á–∞–π–Ω—É—é –∏–≥—Ä—É" },
        { command: '/help', description: "–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥" }
    ]);

    bot.on('message', async msg => {
        const chatId = msg.chat.id;
        const text = msg.text;
        const userName = msg.from.first_name;

        const menu = {
            reply_markup: {
                inline_keyboard: [
                    [{ text:'About Bot', callback_data: 'about_bot'}],
                    // [{ text: 'Menu', callback_data: 'menu' }]
                ]
            }
        };

        // –ö–æ–º–∞–Ω–¥–∞ /start
        if (text === '/start') {
            return bot.sendMessage(chatId, `üëã –ü—Ä–∏–≤–µ—Ç, ${userName}!\n–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –≤—ã–±—Ä–∞—Ç—å –∏–≥—Ä—É.`, menu);
        }

        // –ö–æ–º–∞–Ω–¥–∞ /info
        if (text === '/info') {
            return bot.sendMessage(chatId, "üéÆ –≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–≥–∞–µ—Ç –≤—ã–±—Ä–∞—Ç—å –∏–≥—Ä—É.\n–¢—ã –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∏–≥—Ä –∏–ª–∏ –≤—ã–±—Ä–∞—Ç—å —Å–ª—É—á–∞–π–Ω—É—é.");
        }

        // –ö–æ–º–∞–Ω–¥–∞ /list
        if (text === '/list') {
            const gameList = await getGameList();
            if (gameList.length === 0) {
                return bot.sendMessage(chatId, "üì≠ –í —Å–ø–∏—Å–∫–µ –ø–æ–∫–∞ –Ω–µ—Ç –∏–≥—Ä.");
            }
            const messageText = "üìú –°–ø–∏—Å–æ–∫ –∏–≥—Ä:\n" + gameList.map((game, index) => `${index + 1}. ${game}`).join("\n");
            return bot.sendMessage(chatId, messageText);
        }

        // –ö–æ–º–∞–Ω–¥–∞ /random
        if (text === '/random') {
            const gameList = await getGameList();
            if (gameList.length === 0) {
                return bot.sendMessage(chatId, "üò¢ –í —Å–ø–∏—Å–∫–µ –Ω–µ—Ç –∏–≥—Ä –¥–ª—è –≤—ã–±–æ—Ä–∞.");
            }
            const randomGame = gameList[Math.floor(Math.random() * gameList.length)];
            return bot.sendMessage(chatId, `üé≤ –¢–µ–±–µ —Å—Ç–æ–∏—Ç —Å—ã–≥—Ä–∞—Ç—å –≤: ${randomGame}`);
        }

        // –ö–æ–º–∞–Ω–¥–∞ /help
        if (text === '/help') {
            return bot.sendMessage(chatId, "üìñ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n" +
                "/start - –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ\n" +
                "/info - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ\n" +
                "/list - –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∏–≥—Ä\n" +
                "/random - –í—ã–±—Ä–∞—Ç—å —Å–ª—É—á–∞–π–Ω—É—é –∏–≥—Ä—É\n" +
                "/help - –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥"
            );
        }

        return bot.sendMessage(chatId, "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ù–∞–ø–∏—à–∏ /help, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.");
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"
    bot.on('callback_query', query => {
        const chatId = query.message.chat.id;
        if (query.data === 'about_bot') {
            bot.sendMessage(chatId, "üéÆ –≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–≥–∞–µ—Ç –≤—ã–±—Ä–∞—Ç—å –∏–≥—Ä—É.\n–¢—ã –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∏–≥—Ä –∏–ª–∏ –≤—ã–±—Ä–∞—Ç—å —Å–ª—É—á–∞–π–Ω—É—é.");
        }
        // if (query.data === 'menu'){
        //     bot.sendMessage(chatId, "")
        // }
        bot.answerCallbackQuery(query.id);
    });
};

start();
